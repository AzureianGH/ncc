; 8086 Assembly generated by NCC Compiler
bits 16
org 0x0

; Function: regular_func
_regular_func:
    push bp
    mov bp, sp

    ; Return statement
    mov ax, [bp+4] ; Load parameter a
    push ax ; Save left operand
    mov ax, [bp+6] ; Load parameter b
    mov bx, ax ; Right operand to bx
    pop ax ; Restore left operand
    add ax, bx ; Addition
    jmp _regular_func_exit

_regular_func_exit:
    ; Standard function epilogue
    mov sp, bp
    pop bp
    ret

; Function: old_function
_old_function:
    push bp
    mov bp, sp

    ; Return statement
    mov ax, [bp+4] ; Load parameter x
    push ax ; Save left operand
    mov ax, 2 ; Load literal
    mov bx, ax ; Right operand to bx
    pop ax ; Restore left operand
    imul bx ; Multiplication (signed)
    jmp _old_function_exit

_old_function_exit:
    ; Standard function epilogue
    mov sp, bp
    pop bp
    ret

; Function: legacy_method
_legacy_method:
    push bp
    mov bp, sp

    ; Function call to printf
    ; String literal: This is a legacy method\n
    mov ax, string_0 ; Address of string
    push ax ; Argument 1
    call _printf
    add sp, 2 ; Remove arguments

_legacy_method_exit:
    ; Standard function epilogue
    mov sp, bp
    pop bp
    ret

; Function: main
_main:
    push bp
    mov bp, sp

    ; Local variable declaration: a
    mov ax, 5 ; Load literal
    push ax ; Initialize local variable
    ; Local variable declaration: b
    mov ax, 10 ; Load literal
    push ax ; Initialize local variable
    ; Local variable declaration: result1
    ; Function call to regular_func
    mov ax, [bp-4] ; Load local variable b
    push ax ; Argument 2
    mov ax, [bp-2] ; Load local variable a
    push ax ; Argument 1
    call _regular_func
    add sp, 4 ; Remove arguments
    push ax ; Initialize local variable
    ; Local variable declaration: result2
    ; Function call to old_function
    mov ax, [bp-2] ; Load local variable a
    push ax ; Argument 1
    call _old_function
    add sp, 2 ; Remove arguments
    push ax ; Initialize local variable
    ; Function call to legacy_method
    call _legacy_method
    ; Return statement
    mov ax, 0 ; Load literal
    jmp _main_exit

_main_exit:
    ; Standard function epilogue
    mov sp, bp
    pop bp
    ret


; Data section for strings and arrays
; String literals section
string_0: db 84, 104, 105, 115, 32, 105, 115, 32, 97, 32, 108, 101, 103, 97, 99, 121, 32, 109, 101, 116, 104, 111, 100, 10, 0  ; null terminator
